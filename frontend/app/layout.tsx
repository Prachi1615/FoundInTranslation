import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import { DynamicContextProvider, DynamicWidget } from "@dynamic-labs/sdk-react-core";
import { EthereumWalletConnectors } from "@dynamic-labs/ethereum";
import { LanguageProvider } from "./lib/providers/language";
import { TranslationProvider } from "./lib/providers/translation";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${ geistSans.variable } ${ geistMono.variable } antialiased`}
      >
        <LanguageProvider>
          <TranslationProvider>
            <DynamicContextProvider
              settings={{
                appName: 'Found In Translation',
                environmentId: '4ffa98ef-1ebf-4f68-9a03-b1cdb3f55a7e',
                walletConnectors: [EthereumWalletConnectors],
              }}>
              <div className="p-4">
                <DynamicWidget />
                {children}
              </div>
            </DynamicContextProvider>
          </TranslationProvider>
        </LanguageProvider>
      </body>
    </html>
  );
}
